.
├── seestar/                     # Package principal de l'application
│   ├── core/                    # Noyau : Fonctions de base du traitement d'image
│   │   ├── __init__.py          # Exporte les éléments du 'core'
│   │   ├── image_processing.py  # Chargement/Sauvegarde FITS, Debayer, Normalisation, Aperçu PNG
│   │   ├── alignment.py         # Classe SeestarAligner pour l'alignement (astroalign)
│   │   ├── hot_pixels.py        # Détection/Correction pixels chauds (OpenCV +/- CUDA)
│   │   └── utils.py             # Utilitaires : Estimation taille lot, Débruitage, Checks CUDA/CuPy
│   │
│   ├── gui/                     # Interface Graphique Utilisateur (Tkinter)
│   │   ├── __init__.py          # Exporte les éléments du 'gui'
│   │   ├── main_window.py       # Fenêtre principale, orchestration UI, lien avec backend
│   │   ├── preview.py           # Gestionnaire Canvas Aperçu (Zoom/Pan, Ajustements visuels)
│   │   ├── histogram_widget.py  # Widget Histogramme interactif (Matplotlib intégré)
│   │   ├── file_handling.py     # Gestionnaire dialogues sélection fichiers/dossiers
│   │   ├── progress.py          # Gestionnaire affichage progression (barre, texte, timers)
│   │   └── settings.py          # Gestionnaire chargement/sauvegarde paramètres (JSON)
│   │
│   ├── queuep/                  # Backend : Traitement asynchrone en file d'attente
│   │   ├── __init__.py          # Exporte le QueueManager
│   │   └── queue_manager.py     # SeestarQueuedStacker : Moteur principal (thread, file, align, stack, drizzle, poids)
│   │
│   ├── tools/                   # Outils : Fonctions avancées pour traitement/aperçu
│   │   ├── __init__.py          # Exporte les éléments 'tools'
│   │   └── stretch.py           # Presets Stretch, Correction Couleur, Auto-ajustements, Sauvegarde PNG
│   │
│   ├── enhancement/             # Améliorations : Drizzle et post-traitement
│   │   ├── __init__.py          # Exporte les éléments 'enhancement'
│   │   ├── drizzle_integration.py # Fonctions/Classes utilitaires pour Drizzle (WCS, chargement temp)
│   │   └── stack_enhancement.py   # StackEnhancer (potentiellement pour post-traitement : crop, CLAHE)
│   │
│   ├── localization/            # Support multi-langues
│   │   ├── __init__.py          # Exporte la classe Localization
│   │   ├── fr.py                # Traductions françaises
│   │   ├── en.py                # Traductions anglaises
│   │   └── localization.py      # Classe Localization pour gérer les traductions
│   │
│   └── __init__.py              # Init package seestar, exporte éléments clés
│
├── icon/                        # Dossier pour les icônes et images de fond
│   ├── icon.png                 # Icône de l'application
│   └── back.png                 # Image de fond pour l'aperçu
│
├── main.py                      # Script principal pour lancer l'application GUI
├── README.md                    # Documentation principale
├── requirements.txt             # Dépendances Python
├── seestar_settings.json        # Fichier de configuration utilisateur (exemple/généré)
├── LICENSE                      # Fichier de licence (ex: GPL-3.0)
└── quality weighting explained.txt # Documentation spécifique sur la pondération