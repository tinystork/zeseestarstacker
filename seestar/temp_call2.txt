        # Utiliser data_after_postproc (qui est l'image [0,1] après tous les post-traitements)
        # et laisser save_preview_image appliquer son propre stretch par défaut.
        if data_after_postproc is not None:
            self.update_progress(
                f"  DEBUG QM (_save_final_stack): Données pour save_preview_image (data_after_postproc) - Range: [{np.nanmin(data_after_postproc):.4f}, {np.nanmax(data_after_postproc):.4f}], Shape: {data_after_postproc.shape}, Dtype: {data_after_postproc.dtype}"
            )
            logger.debug(
                f"  DEBUG QM (_save_final_stack): Données pour save_preview_image (data_after_postproc) - Range: [{np.nanmin(data_after_postproc):.4f}, {np.nanmax(data_after_postproc):.4f}], Shape: {data_after_postproc.shape}, Dtype: {data_after_postproc.dtype}"
            )
            try:
                save_preview_image(
                    data_after_postproc, preview_path, enhanced_stretch=False
                )  # ou True si vous préférez le stretch "enhanced" pour le PNG
                self.update_progress("     ✅ Sauvegarde Preview PNG terminee.")
            except Exception as prev_err:
                self.update_progress(
                    f"     ❌ Erreur Sauvegarde Preview PNG: {prev_err}."
                )
        else:
            self.update_progress(
                "ⓘ Aucune image a sauvegarder pour preview PNG (data_after_postproc est None)."
