                    and current_batch_items_with_masks_for_stack_batch
                ):
                    self.stacked_batches_count += 1
                    self._send_eta_update()
                    self.update_progress(
                        f"‚öôÔ∏è Traitement classique du dernier lot partiel ({len(current_batch_items_with_masks_for_stack_batch)} images)..."
                    )
                    self._process_completed_batch(
                        current_batch_items_with_masks_for_stack_batch,
                        self.stacked_batches_count,
                        self.total_batches_estimated,
                        self.reference_wcs_object,
                    )
                    self._move_to_stacked(self._current_batch_paths)
                    self._save_partial_stack()
                    self._update_batch_count_file()
                    self._current_batch_paths = []

                    current_batch_items_with_masks_for_stack_batch = []

                if self.reproject_between_batches:
                    self.update_progress("üèÅ Finalisation Stacking (Reprojection)...")
                    if self.images_in_cumulative_stack > 0 or (
                        hasattr(self, "cumulative_sum_memmap")
                        and self.cumulative_sum_memmap is not None
                    ):
                        self._save_final_stack(
                            output_filename_suffix="_classic_reproject"
                        )
                    else:
                        self.update_progress(
                            "   Aucune image accumul√©e pour sauvegarde."
                        )
                        self.final_stacked_path = None
                elif self.reproject_coadd_final:
                    self.update_progress("üèÅ Finalisation Reproject&Coadd...")

                    solved_batches = [
                        bf
                        for bf in self.intermediate_classic_batch_files
                        if bf[0]
                        not in getattr(self, "unsolved_classic_batch_files", set())
                    ]
                    if solved_batches:
                        if len(solved_batches) == 1:
                            self._finalize_single_classic_batch(solved_batches[0])
                        elif not self._reproject_classic_batches_zm(solved_batches):
                            if self._reproject_classic_batches(solved_batches):
                                self._save_final_stack(
                                    "_classic_reproject",
                                    drizzle_final_sci_data=self.current_stack,
                                    drizzle_final_wht_data=self.current_coverage,
                                    preserve_linear_output=True,
                                )
                            else:
                                self.update_progress(
                                    "   Reprojection finale √©chou√©e.", "WARN"
                                )
                                self.final_stacked_path = None

                    else:
