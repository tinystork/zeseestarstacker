# ---------------------------------------------------------------------------
# Seestar Stacker - Requirements
# ---------------------------------------------------------------------------
# Core CPU Libraries for the main Seestar Stacker GUI application
# (Tested with Python 3.8+, NumPy 1.x/2.x)
# ---------------------------------------------------------------------------

# --- Core Scientific Libraries ---
numpy                    # Fundamental numerical operations
scipy                    # Scientific library (dependency for skimage, maybe acstools)
astropy                  # Core astronomy package (includes ccdproc)

# --- Image Processing & Alignment ---
opencv-python  # OpenCV for image operations (cv2)
Pillow           # Image handling (PIL fork)
scikit-image     # Image algorithms (skimage)
colour-demosaicing # Debayering algorithms
astroalign       # Image alignment
>>>>>>> graphic-Beta
ccdproc # Ajouté pour la combinaison kappa-sigma robuste via ccdproc.combine

# --- Drizzle & Related (STScI) ---
# Note: Drizzle dependencies can be complex. This might pull in stwcs, etc.
drizzle # Ajouté pour le moteur drizzle 'cdrizzle.tdriz'
photoutils #stack enhancement
# --- GUI & Utilities ---
matplotlib       # Plotting (Histogram)
tqdm             # Progress bars (used by backend?)

# --- Optional Dependencies ---
 psutil            # For automatic batch size estimation (Uncomment if needed)
 acstools          # For satellite trail detection (Uncomment if needed)
# cupy-cuda11x==12.2.0     # For GPU acceleration (EXAMPLE! VERSION MUST MATCH YOUR CUDA TOOLKIT!)
                           # Replace '11x' with your CUDA major version (e.g., 11x, 12x)
                           # Check available versions: https://pypi.org/project/cupy-cuda11x/
                           # Uncomment and adjust if you have a compatible NVIDIA GPU and CUDA installed.

# ---------------------------------------------------------------------------
# NOTES ON NUMPY 2.x COMPATIBILITY (IMPORTANT!)
# ---------------------------------------------------------------------------
# This project has been tested with NumPy 2.x (e.g., 2.0.0).
# However, some users with NumPy >= 2.0 might encounter errors when using
# optional GPU acceleration with certain CuPy versions, specifically errors like:
# "Unable to avoid copy while creating an array as requested."
#
# If you encounter this error *while using the GPU*, it likely indicates a
# compatibility issue between your specific NumPy 2.x version and your CuPy version.
#
# TROUBLESHOOTING: If you see the error above and want to use the GPU:
#   1. Ensure you have the LATEST CuPy version matching your CUDA Toolkit.
#   2. If the error persists, try DOWNGRADING NumPy to the latest 1.x release as a
#      temporary workaround:
#      pip install "numpy<2.0"
#
# If you are *not* using the GPU, NumPy 2.x should generally work fine, and
# the program's CPU fallback will handle any GPU-specific errors.
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# OPTIONAL GPU ACCELERATION (CUDA for Core App)
# ---------------------------------------------------------------------------
# For potential speedups in denoising, blurring, CLAHE, and STACKING.
# The program runs correctly on CPU if CUDA/CuPy are not configured.
# See README.md for full details.

# 1. OpenCV CUDA (via opencv-contrib-python listed above)
#    - Relies on user having CUDA Toolkit + drivers installed BEFORE pip install.
#    - Automatic CPU fallback if unavailable. "DEBUG: No CUDA devices detected by OpenCV" is normal.

# 2. CuPy CUDA (Requires MANUAL installation by user AFTER base install)
#    - Provides significant stacking speedup on compatible NVIDIA GPUs.
#    - User MUST install the correct CuPy package matching their system's CUDA Toolkit.
#    - Check your system CUDA version: nvcc --version
#    - Example (if you have CUDA 12.x installed):
#      pip install cupy-cuda12x
#    - Example for CUDA 11.x systems:
#      pip install cupy-cuda11x
#    - Find exact package name: https://docs.cupy.dev/en/stable/install.html
#
#    - WARNING MESSAGES ARE NORMAL if CuPy/CUDA not set up correctly.
#      Messages like "CuPy library not found", "nvrtc64_XXX.dll not found",
#      or "CUDA runtime error" during startup or processing mean the GPU path
#      failed. The program WILL automatically fall back to the CPU.
#
# cupy-cudaXXX  # <-- DO NOT UNCOMMENT. User installs manually if desired.
# ---------------------------------------------------------------------------

# ===========================================================================
# DEPENDENCIES FOR STANDALONE TOOLS (Not required for Seestar Stacker GUI)
# ===========================================================================

# ---------------------------------------------------------------------------
# Dependencies ONLY for sat_trail.py (Satellite Trail Analyzer Tool)
# ---------------------------------------------------------------------------
# acstools                # For satellite trail detection (satdet.detsat using Hough)
# scipy                   # Dependency for acstools/skimage/other scientific tasks

# ---------------------------------------------------------------------------
# Dependencies ONLY for visu.py (PyQt5 FITS Viewer Tool)
# ---------------------------------------------------------------------------
# PyQt5                   # GUI framework for the standalone visu.py viewer

# ===========================================================================
# FIN DES NOTES (Version Française)
# ===========================================================================

# ---------------------------------------------------------------------------
# NOTES SUR LA COMPATIBILITÉ NUMPY 2.x (IMPORTANT !)
# ---------------------------------------------------------------------------
# Ce projet a été testé avec NumPy 2.x (ex: 2.0.0).
# Cependant, certains utilisateurs avec NumPy >= 2.0 pourraient rencontrer des
# erreurs en utilisant l'accélération GPU optionnelle avec certaines versions
# de CuPy, notamment des erreurs comme :
# "Unable to avoid copy while creating an array as requested."
#
# Si vous rencontrez cette erreur *en utilisant le GPU*, cela indique probablement
# un problème de compatibilité entre votre version spécifique de NumPy 2.x et
# votre version de CuPy.
#
# DÉPANNAGE : Si vous voyez l'erreur ci-dessus et souhaitez utiliser le GPU :
#   1. Assurez-vous d'avoir la DERNIÈRE version de CuPy correspondant à votre CUDA Toolkit.
#   2. Si l'erreur persiste, essayez de REVENIR à la dernière version 1.x de NumPy
#      comme solution temporaire :
#      pip install "numpy<2.0"
#
# Si vous n'utilisez *pas* le GPU, NumPy 2.x devrait fonctionner correctement, et
# le repli sur CPU du programme gérera les erreurs spécifiques au GPU.
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# ACCÉLÉRATION GPU OPTIONNELLE (CUDA pour l'App Principale)
# ---------------------------------------------------------------------------
# Pour des accélérations potentielles (débruitage, flou, CLAHE, EMPILEMENT).
# Le programme fonctionne correctement sur CPU si CUDA/CuPy ne sont pas configurés.
# Voir README.md pour les détails complets.

# 1. OpenCV CUDA (via opencv-contrib-python listé ci-dessus)
#    - Nécessite que l'utilisateur ait installé CUDA Toolkit + pilotes AVANT pip install.
#    - Repli automatique sur CPU si indisponible. "DEBUG: No CUDA devices detected by OpenCV" est normal.

# 2. CuPy CUDA (Nécessite une installation MANUELLE par l'utilisateur APRÈS l'install de base)
#    - Accélère significativement l'empilement sur GPU NVIDIA compatibles.
#    - L'utilisateur DOIT installer le paquet CuPy correct correspondant à son CUDA Toolkit système.
#    - Vérifiez votre version CUDA système : nvcc --version
#    - Exemple (si vous avez CUDA 12.x installé):
#      pip install cupy-cuda12x
#    - Exemple pour systèmes CUDA 11.x :
#      pip install cupy-cuda11x
#    - Trouvez le nom exact du paquet : https://docs.cupy.dev/en/stable/install.html
#
#    - LES MESSAGES D'AVERTISSEMENT SONT NORMAUX si CuPy/CUDA ne sont pas bien configurés.
#      Les messages comme "CuPy library not found", "nvrtc64_XXX.dll not found",
#      ou "CUDA runtime error" au démarrage ou pendant le traitement signifient que
#      le chemin GPU a échoué. Le programme se REPLIERA automatiquement sur le CPU.
#
# cupy-cudaXXX  # <-- NE PAS DÉCOMMENTER. L'utilisateur installe manuellement si désiré.
# ---------------------------------------------------------------------------
