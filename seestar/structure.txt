zeseestarstacker/
├── .gitignore                  # Specifies intentionally untracked files that Git should ignore
├── LICENSE                     # Contains the software license (e.g., GPL-3.0)
├── README.md                   # Project description, instructions, features, etc.
├── requirements.txt            # Lists Python package dependencies
├── seestar_settings.json       # Default/saved user settings for the GUI
├── testimg.py                  # Standalone script for inspecting FITS headers (utility)
├── visu.py                     # Standalone PyQt5 FITS viewer (utility, separate from main GUI)
│
├── examples/                   # Directory for example data/results (Best Practice)
│   └── ...                     # (Populate with example FITS, darks, output)
│
├── icon/                       # Directory for icons and UI images (As used in main_window.py)
│   ├── icon.png                # Application icon
│   └── back.png                # Background image for preview canvas
│
├── seestar/                    # Main package directory for the application code
│   ├── __init__.py             # Makes 'seestar' a Python package, exports main symbols
│   ├── main.py                 # Primary script to launch the Tkinter GUI application
│   │
│   ├── core/                   # Core image processing logic (non-GUI)
│   │   ├── __init__.py         # Core sub-package initializer
│   │   ├── alignment.py        # Image alignment functionality (SeestarAligner class)
│   │   ├── hot_pixels.py       # Hot pixel detection and correction logic
│   │   ├── image_processing.py # Low-level image ops: FITS load/save, debayer, preview save
│   │   ├── stacking.py         # (Seems unused/superseded by queue_manager.py based on imports)
│   │   └── utils.py            # Helper functions: CUDA/CuPy checks, denoising, batch size estimation
│   │
│   ├── gui/                    # Graphical User Interface components (Tkinter)
│   │   ├── __init__.py         # GUI sub-package initializer
│   │   ├── file_handling.py    # Manages file/folder browsing dialogs
│   │   ├── histogram_widget.py # Matplotlib histogram widget integration
│   │   ├── main_window.py      # Defines the main SeestarStackerGUI class and layout
│   │   ├── preview.py          # Manages the preview canvas, zoom/pan, preview rendering pipeline
│   │   ├── progress.py         # Manages progress bar, status text, and timers
│   │   └── settings.py         # Manages loading and saving UI/processing settings
│   │
│   ├── localization/           # Language translation files and logic
│   │   ├── __init__.py         # Localization sub-package initializer
│   │   ├── en.py               # English translation dictionary
│   │   ├── fr.py               # French translation dictionary
│   │   └── localization.py     # Localization class for handling translations
│   │
│   ├── queuep/                 # Queued processing logic (handles background work)
│   │   ├── __init__.py         # Queue Processing sub-package initializer
│   │   ├── image_db.py         # (Seems unused based on queuep/__init__.py)
│   │   ├── image_info.py       # (Seems unused based on queuep/__init__.py)
│   │   └── queue_manager.py    # Main worker class (SeestarQueuedStacker) managing the queue and thread
│   │
│   └── tools/                  # Standalone image processing tools/algorithms
│       ├── __init__.py         # Tools sub-package initializer
│       └── stretch.py          # Contains StretchPresets, ColorCorrection, auto functions
│
└── tests/                      # Directory for unit tests (Best Practice)
    └── ...                     # (Test files for core, utils, etc.)